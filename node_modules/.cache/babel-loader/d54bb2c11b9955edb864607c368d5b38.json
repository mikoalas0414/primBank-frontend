{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { BscConnector } from '@binance-chain/bsc-connector';\nimport { useConfig } from '../contexts/configContext';\nimport { useEffect, useState } from 'react';\nexport const connectorNames = {\n  injected: 'INJECTED',\n  walletConnect: 'WALLET_CONNECT',\n  bsc: 'BSC'\n};\nexport const useConnectors = () => {\n  _s();\n\n  const {\n    config\n  } = useConfig();\n  const [connectorsByName, setConnectorsByName] = useState(undefined);\n  useEffect(() => {\n    const injected = new InjectedConnector({\n      supportedChainIds: config.supportedChainIds\n    });\n    const bsc = new BscConnector({\n      supportedChainIds: config.supportedChainIds\n    });\n    const walletconnect = new WalletConnectConnector({\n      rpc: config.rpcUrls,\n      bridge: 'https://bridge.walletconnect.org',\n      qrcode: true,\n      pollingInterval: config.walletConnectPoolingInterval\n    });\n    setConnectorsByName({\n      [connectorNames.injected]: injected,\n      [connectorNames.bsc]: bsc,\n      [connectorNames.walletConnect]: walletconnect\n    });\n  }, [config]);\n  return connectorsByName;\n};\n\n_s(useConnectors, \"3AMZg1PKBQo9JmuI2ESznTquYgg=\", false, function () {\n  return [useConfig];\n});","map":{"version":3,"sources":["/Users/nlwsoft/Documents/GitHub/primBank-frontend/src/hooks/useConnectors.jsx"],"names":["InjectedConnector","WalletConnectConnector","BscConnector","useConfig","useEffect","useState","connectorNames","injected","walletConnect","bsc","useConnectors","config","connectorsByName","setConnectorsByName","undefined","supportedChainIds","walletconnect","rpc","rpcUrls","bridge","qrcode","pollingInterval","walletConnectPoolingInterval"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SAASC,sBAAT,QAAuC,qCAAvC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,QAAQ,EAAE,UADkB;AAE5BC,EAAAA,aAAa,EAAE,gBAFa;AAG5BC,EAAAA,GAAG,EAAE;AAHuB,CAAvB;AAMP,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaR,SAAS,EAA5B;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAACS,SAAD,CAAxD;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMG,QAAQ,GAAG,IAAIP,iBAAJ,CAAsB;AACrCe,MAAAA,iBAAiB,EAAEJ,MAAM,CAACI;AADW,KAAtB,CAAjB;AAIA,UAAMN,GAAG,GAAG,IAAIP,YAAJ,CAAiB;AAC3Ba,MAAAA,iBAAiB,EAAEJ,MAAM,CAACI;AADC,KAAjB,CAAZ;AAIA,UAAMC,aAAa,GAAG,IAAIf,sBAAJ,CAA2B;AAC/CgB,MAAAA,GAAG,EAAEN,MAAM,CAACO,OADmC;AAE/CC,MAAAA,MAAM,EAAE,kCAFuC;AAG/CC,MAAAA,MAAM,EAAE,IAHuC;AAI/CC,MAAAA,eAAe,EAAEV,MAAM,CAACW;AAJuB,KAA3B,CAAtB;AAOAT,IAAAA,mBAAmB,CAAC;AAClB,OAACP,cAAc,CAACC,QAAhB,GAA2BA,QADT;AAElB,OAACD,cAAc,CAACG,GAAhB,GAAsBA,GAFJ;AAGlB,OAACH,cAAc,CAACE,aAAhB,GAAgCQ;AAHd,KAAD,CAAnB;AAKD,GArBQ,EAqBN,CAACL,MAAD,CArBM,CAAT;AAuBA,SAAOC,gBAAP;AACD,CA5BM;;GAAMF,a;UACQP,S","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { useConfig } from '../contexts/configContext'\nimport { useEffect, useState } from 'react'\n\nexport const connectorNames = {\n  injected: 'INJECTED',\n  walletConnect: 'WALLET_CONNECT',\n  bsc: 'BSC',\n}\n\nexport const useConnectors = () => {\n  const { config } = useConfig()\n  const [connectorsByName, setConnectorsByName] = useState(undefined)\n\n  useEffect(() => {\n    const injected = new InjectedConnector({\n      supportedChainIds: config.supportedChainIds,\n    })\n\n    const bsc = new BscConnector({\n      supportedChainIds: config.supportedChainIds,\n    })\n\n    const walletconnect = new WalletConnectConnector({\n      rpc: config.rpcUrls,\n      bridge: 'https://bridge.walletconnect.org',\n      qrcode: true,\n      pollingInterval: config.walletConnectPoolingInterval,\n    })\n\n    setConnectorsByName({\n      [connectorNames.injected]: injected,\n      [connectorNames.bsc]: bsc,\n      [connectorNames.walletConnect]: walletconnect,\n    })\n  }, [config])\n\n  return connectorsByName\n}\n"]},"metadata":{},"sourceType":"module"}