{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useWeb3 } from \"./useWeb3\";\nimport { useState } from \"react\";\nimport { STATE } from \"../constants/enums\";\nexport const useWaleltSign = () => {\n  _s();\n\n  const [signature, setSignature] = useState(null);\n  const [signState, setSignState] = useState(STATE.IDLE);\n  const {\n    account,\n    web3\n  } = useWeb3();\n\n  const sign = async (hash, pauseSuccessState) => {\n    try {\n      // const value = ethers.utils.arrayify(hash);\n      setSignState(STATE.BUSY);\n      const sig = await web3.eth.personal.sign(hash, account);\n      setSignature(sig);\n      if (!pauseSuccessState) setSignState(STATE.SUCCEED);\n      return sig;\n    } catch (e) {\n      console.log(e);\n      setSignState(STATE.FAILED);\n      return null;\n    }\n  };\n\n  return {\n    sign,\n    signState,\n    signature,\n    setSignState,\n    setSignature\n  };\n};\n\n_s(useWaleltSign, \"IcYEAhXdpVTd5jKgym6X1o9AE/M=\", false, function () {\n  return [useWeb3];\n});","map":{"version":3,"sources":["/Users/nlwsoft/Documents/GitHub/primBank-frontend/src/hooks/useWalletSign.jsx"],"names":["useWeb3","useState","STATE","useWaleltSign","signature","setSignature","signState","setSignState","IDLE","account","web3","sign","hash","pauseSuccessState","BUSY","sig","eth","personal","SUCCEED","e","console","log","FAILED"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACC,KAAK,CAACM,IAAP,CAA1C;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBV,OAAO,EAAjC;;AAEA,QAAMW,IAAI,GAAG,OAAOC,IAAP,EAAaC,iBAAb,KAAmC;AAC9C,QAAI;AACF;AACAN,MAAAA,YAAY,CAACL,KAAK,CAACY,IAAP,CAAZ;AACA,YAAMC,GAAG,GAAG,MAAML,IAAI,CAACM,GAAL,CAASC,QAAT,CAAkBN,IAAlB,CAAuBC,IAAvB,EAA6BH,OAA7B,CAAlB;AAEAJ,MAAAA,YAAY,CAACU,GAAD,CAAZ;AACA,UAAI,CAACF,iBAAL,EAAwBN,YAAY,CAACL,KAAK,CAACgB,OAAP,CAAZ;AACxB,aAAOH,GAAP;AACD,KARD,CAQE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAZ,MAAAA,YAAY,CAACL,KAAK,CAACoB,MAAP,CAAZ;AACA,aAAO,IAAP;AACD;AACF,GAdD;;AAgBA,SAAO;AAAEX,IAAAA,IAAF;AAAQL,IAAAA,SAAR;AAAmBF,IAAAA,SAAnB;AAA8BG,IAAAA,YAA9B;AAA4CF,IAAAA;AAA5C,GAAP;AACD,CAtBM;;GAAMF,a;UAGeH,O","sourcesContent":["import { useWeb3 } from \"./useWeb3\";\nimport { useState } from \"react\";\nimport { STATE } from \"../constants/enums\";\n\nexport const useWaleltSign = () => {\n  const [signature, setSignature] = useState(null);\n  const [signState, setSignState] = useState(STATE.IDLE);\n  const { account, web3 } = useWeb3();\n\n  const sign = async (hash, pauseSuccessState) => {\n    try {\n      // const value = ethers.utils.arrayify(hash);\n      setSignState(STATE.BUSY);\n      const sig = await web3.eth.personal.sign(hash, account);\n\n      setSignature(sig);\n      if (!pauseSuccessState) setSignState(STATE.SUCCEED);\n      return sig;\n    } catch (e) {\n      console.log(e);\n      setSignState(STATE.FAILED);\n      return null;\n    }\n  };\n\n  return { sign, signState, signature, setSignState, setSignature };\n};\n"]},"metadata":{},"sourceType":"module"}